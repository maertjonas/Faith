@page "/"
@page "/users"
@using System.Net.Http.Json
@using Faith.Shared.Users
@inject HttpClient httpClient


<MudButton Variant="Variant.Filled" OnClick="@(() => OpenDrawer(Anchor.End))" Color="Color.Success">Create new user</MudButton>

<MudDrawer @bind-Open="@open" Width="@width" Height="@height" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Create a new user</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Match="NavLinkMatch.All">Store</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Library</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Community</MudNavLink>
    </MudNavMenu>
</MudDrawer>

@code{ 
    bool open;
    Anchor anchor;
    string width = "400px", height = "100%";

    void OpenDrawer(Anchor anchor)
    {
        open = true;
        this.anchor = anchor;
    }
}


<MudDataGrid T="UserDto.Index" Items="@users" Filterable="true" SortMode="SortMode.Multiple" QuickFilter="@_quickFilter"
                Hideable="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Users</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Immediate="true" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <Column T="UserDto.Index" Field="Id" Sortable="false" Filterable="false" />
        <Column T="UserDto.Index" Field="FirstName" Title="First name" />
        <Column T="UserDto.Index" Field="LastName" Title="Last name" />
        <Column T="UserDto.Index" Field="DateOfBirth" Title="Date of birth" />
        <Column T="UserDto.Index" Field="Gender" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="UserDto.Index" />
    </PagerContent>
</MudDataGrid>





@code {
    private string? _searchString;
    private bool _sortNameByLength;
    
    // quick filter - filter gobally across multiple columns with the same input
    private Func<UserDto.Index, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.FirstName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.LastName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if ($"{x.DateOfBirth} {x.Gender}".Contains(_searchString))
            return true;

        return false;
    };
}


